// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentDataView.Data;

namespace StudentDataView.Migrations
{
    [DbContext(typeof(StudentDataContext))]
    [Migration("20210411171402_ChangesToDb")]
    partial class ChangesToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentDataView.Models.ContactDataModel", b =>
                {
                    b.Property<string>("StudentDataModelID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AddressDisclosure")
                        .HasColumnType("bit");

                    b.Property<bool>("AddressTransferred")
                        .HasColumnType("bit");

                    b.Property<string>("ContactDataModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("ContactPrioritySource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FeePayer")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HomeAddressLink")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NextOfKin")
                        .HasColumnType("bit");

                    b.Property<bool>("OtherHomeAddressLink")
                        .HasColumnType("bit");

                    b.Property<bool>("ParentalPortal")
                        .HasColumnType("bit");

                    b.Property<bool>("ParentalResponsibility")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendSms")
                        .HasColumnType("bit");

                    b.Property<string>("StudentDataModelID1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentSourceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WrittenCommunication")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentDataModelID");

                    b.HasIndex("StudentDataModelID1");

                    b.ToTable("ContactDataModel");
                });

            modelBuilder.Entity("StudentDataView.Models.StudentDataModel", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnrolmentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EverInCare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstLanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstLanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormerUpn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeMeal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeMeal6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FsmReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasEmergencyConsent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeLanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeLanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPp")
                        .HasColumnType("bit");

                    b.Property<string>("IsPregnant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LookedAfter")
                        .HasColumnType("bit");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationalities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldSourceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProficiencyInEnglishCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProficiencyInEnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PupilAdmissionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ServiceChild")
                        .HasColumnType("bit");

                    b.Property<string>("SourceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TownCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uln")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearGroupSourceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StudentDataModel");
                });

            modelBuilder.Entity("StudentDataView.Models.ContactDataModel", b =>
                {
                    b.HasOne("StudentDataView.Models.StudentDataModel", null)
                        .WithMany("Contacts")
                        .HasForeignKey("StudentDataModelID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentDataView.Models.StudentDataModel", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
